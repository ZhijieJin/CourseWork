calling load_tuples on "matrices/input_mats/scrambled_rows.txt":
12 8 nz:19
(0,2) -0.115000
(0,3) -0.829100
(1,2) -0.935900
(1,3) 1.028600
(1,7) 0.537000
(3,3) -0.354200
(3,4) -0.926600
(5,7) -1.372400
(6,3) 0.101200
(6,6) -0.232100
(7,7) -0.528200
(8,5) 0.241400
(9,1) 0.683300
(9,3) -1.470500
(10,5) -1.136400
(10,6) 0.472300
(11,2) -0.025900
(11,5) 0.022000
(11,6) -0.093900
calling load_tuples on "matrices/input_mats/scrambled_rows_large.txt":
50000 50000 nz:19
(0,5) -0.829100
(3,7) 1.028600
(7,5) 0.683300
(11,2) -0.025900
(11,5) 0.022000
(12,4) -0.926600
(16,3) -0.354200
(16,5) -1.136400
(99,5) 0.241400
(99,99) -0.232100
(111,48888) -0.528200
(211,555) 0.101200
(223,656) 0.537000
(323,1244) -1.470500
(444,123) -1.372400
(1241,2444) -0.935900
(2333,11111) -0.115000
(12312,12312) -0.093900
(34999,33333) 0.472300
calling load_tuples on "matrices/input_mats/withZeroes.txt":
15 15 nz:19
(0,2) -1.392500
(0,5) -0.623300
(1,9) -0.320800
(2,9) -0.785700
(4,1) -0.689400
(4,3) 0.244200
(4,5) -2.101800
(4,6) -0.606700
(6,3) 0.819000
(8,3) 1.918900
(8,13) -1.100400
(9,1) -0.659200
(9,6) -1.326800
(10,7) -0.031100
(12,9) -0.340200
(13,2) 0.728000
(13,9) 0.632500
(13,11) 0.493600
(14,13) -0.370800
a_Ct = a_A+a_B addition in tuples:
8 4 nz:13
(0,2) 0.265300
(0,3) -0.055200
(1,3) 1.552000
(2,1) -1.415800
(2,3) 2.630500
(3,2) -0.730600
(4,2) 0.874500
(5,0) -2.076500
(5,1) 1.107600
(5,3) -0.322700
(6,3) -0.403500
(7,0) -2.014300
(7,3) -0.806300
sa_Ct = sa_A+sa_B sparse addition in tuples:
400 410 nz:24
(1,245) -0.275900
(2,328) -0.224300
(11,248) -2.679100
(14,202) 0.279100
(19,387) 0.112200
(22,196) 1.198100
(33,207) 1.130600
(88,181) -0.195700
(120,247) 0.394900
(149,113) 1.194700
(154,79) 0.337000
(166,85) 0.318600
(185,46) -0.299600
(186,263) -0.622600
(209,364) -0.281300
(228,30) 1.189600
(238,86) -1.109200
(254,366) -0.274800
(257,373) -0.141400
(275,250) 0.211100
(293,189) 2.259600
(321,244) 0.809300
(360,128) 0.043200
(367,28) -0.667100
m_Ct = m_A*m_B multiplication in tuples:
5 6 nz:21
(0,0) -0.104388
(0,1) -0.025853
(0,2) 0.004161
(0,3) 0.056800
(0,4) 0.108843
(0,5) 0.008050
(1,0) -0.006116
(1,3) 0.003328
(1,4) 0.006377
(2,1) -1.930881
(2,2) 0.310760
(2,5) 0.601205
(3,0) -0.049753
(3,1) -1.020216
(3,2) 0.164196
(3,3) 0.027072
(3,4) 0.051877
(3,5) 0.317657
(4,1) -3.130128
(4,2) 0.503769
(4,5) 0.974605

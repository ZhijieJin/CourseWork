-- VHDL Entity lab8_lib.lab8.symbol
--
-- Created:
--          by - zhijiej2.ews (dcl-l440-27.ews.illinois.edu)
--          at - 15:58:06 10/19/16
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY lab8 IS
   PORT( 
      T   : IN     std_logic;
      clk : IN     std_logic;
      rst : IN     std_logic;
      set : IN     std_logic;
      A   : OUT    std_logic;
      P   : OUT    std_logic
   );

-- Declarations

END lab8 ;

--
-- VHDL Architecture lab8_lib.lab8.struct
--
-- Created:
--          by - zhijiej2.ews (dcl-l440-27.ews.illinois.edu)
--          at - 15:58:06 10/19/16
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY lab8_lib;

ARCHITECTURE struct OF lab8 IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL S0   : std_logic;
   SIGNAL S0_N : std_logic;
   SIGNAL S1   : std_logic;
   SIGNAL S1_N : std_logic;
   SIGNAL S2   : std_logic;
   SIGNAL S2_N : std_logic;
   SIGNAL dout : std_logic;


   -- ModuleWare signal declarations(v1.9) for instance 'U_2' of 'adff'
   SIGNAL mw_U_2reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.9) for instance 'U_3' of 'adff'
   SIGNAL mw_U_3reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.9) for instance 'U_4' of 'adff'
   SIGNAL mw_U_4reg_cval : std_logic;

   -- Component Declarations
   COMPONENT Control_Logic
   PORT (
      S0 : IN     std_logic ;
      S1 : IN     std_logic ;
      S2 : IN     std_logic ;
      A  : OUT    std_logic ;
      P  : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT Next_State_Logic
   PORT (
      S0   : IN     std_logic ;
      S1   : IN     std_logic ;
      S2   : IN     std_logic ;
      T    : IN     std_logic ;
      S0_N : OUT    std_logic ;
      S1_N : OUT    std_logic ;
      S2_N : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Control_Logic USE ENTITY lab8_lib.Control_Logic;
   FOR ALL : Next_State_Logic USE ENTITY lab8_lib.Next_State_Logic;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.9) for instance 'U_2' of 'adff'
   S2 <= mw_U_2reg_cval;
   u_2seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_U_2reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_U_2reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_U_2reg_cval <= S2_N;
         END IF;
      END IF;
   END PROCESS u_2seq_proc;

   -- ModuleWare code(v1.9) for instance 'U_3' of 'adff'
   S1 <= mw_U_3reg_cval;
   u_3seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_U_3reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_U_3reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_U_3reg_cval <= S1_N;
         END IF;
      END IF;
   END PROCESS u_3seq_proc;

   -- ModuleWare code(v1.9) for instance 'U_4' of 'adff'
   S0 <= mw_U_4reg_cval;
   u_4seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_U_4reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_U_4reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_U_4reg_cval <= S0_N;
         END IF;
      END IF;
   END PROCESS u_4seq_proc;

   -- ModuleWare code(v1.9) for instance 'U_5' of 'vdd'
   dout <= '1';

   -- Instance port mappings.
   U_0 : Control_Logic
      PORT MAP (
         S0 => S0,
         S1 => S1,
         S2 => S2,
         A  => A,
         P  => P
      );
   U_1 : Next_State_Logic
      PORT MAP (
         S0   => S0,
         S1   => S1,
         S2   => S2,
         T    => T,
         S0_N => S0_N,
         S1_N => S1_N,
         S2_N => S2_N
      );

END struct;
